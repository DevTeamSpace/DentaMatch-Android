apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'
apply plugin: 'org.jetbrains.kotlin.android.extensions'
apply plugin: "org.sonarqube"
sonarqube {
    properties {
        property "sonar.projectName", "DentaMatch_android"
        property "sonar.projectKey", "myproject:DentaMatch_android"
        property "sonar.host.url", "https://sonarqube.appster.in/sonar"
        property "sonar.sources", "src/main"
        property "sonar.signIn", "32178e74d955c119fc38c5e044b13a5f137096bb"
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.profile', 'AllAndroid'
        property 'sonar.import_unknown_files', true
        property 'sonar.android.lint.report', 'build/reports/lint-results.xml'
    }
}

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        mavenCentral()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.27.1'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    mavenCentral()
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")
def serverConfigPropertiesFile = rootProject.file("serverConfig.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()
def serverProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
serverProperties.load(new FileInputStream(serverConfigPropertiesFile))

android {

    configurations.all {
        resolutionStrategy.force 'com.android.support:support-v4:28.0.0'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
    dataBinding {
        enabled true
    }

    packagingOptions {
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }

    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.appster.dentamatch"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 5
        versionName "0.5"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildTypes {
        release {
            lintOptions {
                disable 'MissingTranslation'
            }
            debuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "MixpanelKey", "\"" + DentaMatch_MixpanelKey + "\""
        }
        debug {
            minifyEnabled false
            buildConfigField "String", "MixpanelKey", "\"" + DentaMatch_MixpanelKey + "\""
        }
    }

    androidExtensions {
        experimental = true
    }

    //Signing config for release build
    signingConfigs {
        config {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    flavorDimensions "environment"
    productFlavors {
        Dev {
            dimension "environment"
            buildConfigField("String", "BASE_URL", '"https://dev.dentamatch.co/api/v1/"')
            buildConfigField("String", "CHAT_URL", '"https://dev.dentamatch.co:3000"')
            signingConfig signingConfigs.config
        }
        QA {
            dimension "environment"
            buildConfigField("String", "BASE_URL", '"https://qa.dentamatch.co/api/v1/"')
            buildConfigField("String", "CHAT_URL", '"https://qanode.dentamatch.co:8443"')
            signingConfig signingConfigs.config
        }
        Staging {
            dimension "environment"
            buildConfigField("String", "BASE_URL", '"https://staging.dentamatch.co/api/v1/"')
            buildConfigField("String", "CHAT_URL", '"https://staging.dentamatch.co:8443"')
            signingConfig signingConfigs.config
        }
        Production {
            dimension "environment"
            buildConfigField("String", "BASE_URL", '"https://production.dentamach/api/v1/"')
            buildConfigField("String", "CHAT_URL", '"https://staging.dentamatch.co:8443"')
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    return void
}

ext {
    supportLibrary = '28.0.0'
    playServiceVersion = '16.0.0'
    mapsVersion = '16.1.0'
    fireBaseLibrary = '17.4.0'
    leakCanaryLibrary = '1.5.4'
    retrofitVersion = '2.3.0'
    dagger_version = '2.16'
    constraintLayoutVersion = '1.1.3'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.google.maps.android:android-maps-utils:0.5"
    implementation "com.google.firebase:firebase-messaging:${fireBaseLibrary}"
    implementation "com.android.support:design:${supportLibrary}"
    implementation "com.android.support:appcompat-v7:${supportLibrary}"
    implementation "com.android.support:recyclerview-v7:${supportLibrary}"
    implementation "com.android.support:cardview-v7:${supportLibrary}"
    implementation "com.android.support:support-annotations:${supportLibrary}"
    implementation "com.android.support:multidex:1.0.3"
    implementation "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}"
    implementation "com.google.android.gms:play-services-location:${playServiceVersion}"
    implementation "com.google.android.gms:play-services-auth:16.0.1"
    implementation "com.google.android.gms:play-services-maps:${mapsVersion}"
    implementation "com.google.android.gms:play-services-places:${playServiceVersion}"
    implementation "org.greenrobot:eventbus:3.0.0"
    implementation "com.aurelhubert:ahbottomnavigation:2.1.0"
    implementation "com.orhanobut:hawk:2.0.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:3.11.0"
    implementation ("com.squareup.picasso:picasso:2.71828") { exclude group: 'com.android.support' }
    implementation "de.hdodenhof:circleimageview:2.2.0"
    implementation ("com.wefika:flowlayout:0.4.1") { exclude group: 'com.intellij' }
    implementation "io.realm:android-adapters:2.0.0"
    implementation "com.mixpanel.android:mixpanel-android:4.9.8"
    implementation ("com.crashlytics.sdk.android:crashlytics:2.6.7@aar") { transitive = true }
    implementation "com.facebook.stetho:stetho-okhttp3:1.4.1"
    implementation "com.google.android:flexbox:1.0.0"
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "com.instabug.library:instabug:4.8.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation ("io.socket:socket.io-client:1.0.0") {
        exclude group: 'org.json', module: 'json'
    }
    implementation "io.reactivex.rxjava2:rxjava:2.2.0"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.2"
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'

    debugImplementation "com.squareup.leakcanary:leakcanary-android:1.6.2"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryLibrary"

    testImplementation "junit:junit:4.12"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:3.0.2"

    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
}

// ADD THIS AT THE BOTTOM
apply plugin: 'com.google.gms.google-services'
